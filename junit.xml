<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="40" failures="2" errors="0" time="0.411">
  <testsuite name="tests/films.spec.js" errors="0" failures="2" skipped="0" timestamp="2025-10-28T09:32:03" time="0.289" tests="40">
    <testcase classname="Function &quot;getAllDirectors&quot;" name="should be declared" time="0.002">
    </testcase>
    <testcase classname="Function &quot;getAllDirectors&quot;" name="should return an array" time="0.001">
    </testcase>
    <testcase classname="Function &quot;getAllDirectors&quot;" name="should return a new array, not update the original one" time="0.001">
    </testcase>
    <testcase classname="Function &quot;getAllDirectors&quot;" name="should return a new array with the same length as the original one" time="0.001">
    </testcase>
    <testcase classname="Function &quot;getMoviesFromDirector&quot;" name="should be declared" time="0">
    </testcase>
    <testcase classname="Function &quot;getMoviesFromDirector&quot;" name="should return an array" time="0">
    </testcase>
    <testcase classname="Function &quot;getMoviesFromDirector&quot;" name="should return a new array, not update the original one" time="0.001">
    </testcase>
    <testcase classname="Function &quot;getMoviesFromDirector&quot;" name="should return a new array with the movies from director" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageOfDirector&quot;" name="should be declared" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageOfDirector&quot;" name="should return a number" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageOfDirector&quot;" name="should be different from NaN" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageOfDirector&quot;" name=" should return the average score of movies selecting only the director films. With 2 decimals! " time="0">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should be declared" time="0.001">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should return an array" time="0">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should not mutate the original array" time="0">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should only return the title of the movies, each value should be a string" time="0">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should return all of items when the array passed has fewer than 20 items" time="0">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should order them alphabetically." time="0">
    </testcase>
    <testcase classname="Function &quot;orderAlphabetically&quot;" name="should return the top 20 after ordering them alphabetically." time="0.001">
    </testcase>
    <testcase classname="Function &quot;orderByYear&quot;" name="should be declared" time="0">
    </testcase>
    <testcase classname="Function &quot;orderByYear&quot;" name="should return an array" time="0.008">
    </testcase>
    <testcase classname="Function &quot;orderByYear&quot;" name="should return a new array" time="0">
    </testcase>
    <testcase classname="Function &quot;orderByYear&quot;" name="should return the element in a single element array" time="0.001">
    </testcase>
    <testcase classname="Function &quot;orderByYear&quot;" name="should return the new array in ascending order" time="0">
    </testcase>
    <testcase classname="Function &quot;orderByYear&quot;" name="should order movies with the same year by their title, alphabetically" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageByCategory&quot;" name="should be declared" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageByCategory&quot;" name="should return a number" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageByCategory&quot;" name="should be different from NaN" time="0">
    </testcase>
    <testcase classname="Function &quot;moviesAverageByCategory&quot;" name=" should return the average score of movies selecting only the category films. With 2 decimals! " time="0.001">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should be declared" time="0">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should return an array" time="0.002">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should return a new array, not update the original one" time="0.001">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should return an array of movies with duration as a number" time="0.001">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should return an array of movies with the correct duration for a 31 minute movie" time="0.001">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should return an array of movies with the correct duration for a 341 minute movie" time="0">
    </testcase>
    <testcase classname="Function &quot;hoursToMinutes&quot;" name="should return an array of movies with the correct duration for a 2 hour movie" time="0">
    </testcase>
    <testcase classname="Function &quot;bestFilmOfYear&quot;" name="should be declared" time="0">
    </testcase>
    <testcase classname="Function &quot;bestFilmOfYear&quot;" name="should return an array" time="0.001">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.toBe (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/tests/films.spec.js:388:59)
    at Promise.then.completed (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Function &quot;bestFilmOfYear&quot;" name="should return a new array, not update the original one" time="0">
    </testcase>
    <testcase classname="Function &quot;bestFilmOfYear&quot;" name="should return the best film of a year, searching in an array" time="0.001">
      <failure>Error: expect(received).toEqual(expected) // deep equality

Expected: [{&quot;director&quot;: &quot;Stanley Kubrick&quot;, &quot;duration&quot;: &quot;1h 28min&quot;, &quot;genre&quot;: [&quot;Drama&quot;, &quot;War&quot;], &quot;score&quot;: 8.4, &quot;title&quot;: &quot;Film2&quot;, &quot;year&quot;: 1957}]
Received: undefined
    at Object.toEqual (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/tests/films.spec.js:422:43)
    at Promise.then.completed (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/javierperezlopez/Documents/Formación/Programación y desarrollo web/IT Academy/Especialización/Front End/Sprint 3/ita-sprint-3-movie-database-testing/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
</testsuites>